/// @author Bernhard Ruoff
/// @since 9.0.4
/// @access public
/// @group atoms

// scss-lint:disable NestingDepth
// @param {color} $input-toggle-background [flattenColor(getColor(minor))]
// @param {color} $input-toggle-height [$root-size]
// @param {color} $input-toggle-width [$xui-toggle-height * 1.75]
// @param {color} $xui-toggle-radius [$xui-toggle-height / 2]

%toggle {
  @extend %xui-toggle-style !optional;
  cursor: pointer;
  background-color: $xui-toggle-background;
  border-radius: arrayMagic($xui-toggle-radius);
  direction: ltr;
  display: inline-block;
  height: rem($xui-toggle-height);
  width: rem($xui-toggle-width);
  transition: background-color 0.2s;

  // @param {color} $input-toggle-pin-background [flattenColor(getColor(minor))]
  // @param {color} $input-toggle-pin-height [$root-size]
  // @param {color} $input-toggle-pin-width [$xui-toggle-height * 1.75]
  // @param {color} $xui-toggle-pin-radius [$xui-toggle-height / 2]â„¢

  $_pin-spacing-h: ($xui-toggle-height - $xui-toggle-pin-height) / 2;
  $_pin-spacing-v: (($xui-toggle-width / 2) - $xui-toggle-pin-width) / 2;

  &::after {
    @extend %xui-toggle-pin-style !optional;
    content: '';
    display: block;
    background-color: $xui-toggle-pin-background;
    border-radius: arrayMagic($xui-toggle-pin-width / 2);
    height: rem($xui-toggle-pin-height);
    width: rem($xui-toggle-pin-width);
    margin: arrayMagic($_pin-spacing-h $_pin-spacing-v);
  }
}

%toggle-is-active {
  background-color: $xui-toggle-active-background;
  direction: rtl;
}

.xui-toggle {
  margin: arrayMagic($form-group-spacing);

  &:hover {
    .xui-toggle__switch {
      background-color: $xui-toggle-hover-background;
    }
  }

  [type='radio'],
  [type='checkbox'] {
    @extend %is-hidden-input;

    &:checked {
      + label .xui-toggle__switch {
        @extend %toggle-is-active;
      }
    }
  }

  // @param {px} $xui-toggle-label-size [base-font-size]
  // @param {px} $xui-toggle-line-height [$xui-toggle-label-size * $base-line-height]

  .xui-toggle__switch {
    @extend %toggle;
    margin: arrayMagic($xui-toggle-spacing);
    margin-top: rem(($xui-toggle-line-height - $xui-toggle-height) / 2);
  }

  label {
    cursor: pointer;
    user-select: none;
    font-size: em($xui-toggle-label-size);
    line-height: em($xui-toggle-line-height, $xui-toggle-label-size);
    margin: 0;
  }
}
