/// @author Bernhard Ruoff
/// @since 9.0.4
/// @access public
/// @group atoms
///
/// @param {variable} $btn-font-family
/// @param {number} $btn-padding-ratio [1.5] - ratio by which padding-left and padding-right are bigger
/// @param {array} $btn-spacing [0]

// button core style mixin
@mixin btn-core {
  cursor: pointer;
  appearance: none;
  user-select: none;
  outline: none;
  touch-action: manipulation;
  text-align: center;
  vertical-align: middle;
  text-decoration: none;
  position: relative;
  height: auto;
  border: 0;
  display: inline-block;

  @supports (display: inline-flex) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  font-family: $btn-font-family;
  margin: arrayMagic($btn-spacing);
}

// @param {number} $btn-font-size [$base-font-size]
// @param {number} $btn-line-height [$btn-font-size * $base-line-height]
// @param {number} $btn-icon-size [$base-icon-size]
// @param {number} $btn-min-height [40]
// @param {value} $btn-weight [$is-bold]
// @param {rem} $btn-radius [4]

%btn {
  @include btn-core;
  @include macro-metrics(
    $btn-font-size,
    $btn-line-height,
    $btn-min-height,
    $padding-ratio: $btn-padding-ratio,
    $icon-size: $btn-icon-size
  );
  border-radius: arrayMagic($btn-radius);
  font-weight: $btn-weight;

}

// @param {number} $btn-small-font-size [$btn-font-size * .875]
// @param {number} $btn-small-line-height [$btn-small-font-size * $base-line-height]
// @param {number} $btn-small-icon-size [$btn-icon-size]
// @param {number} $btn-small-min-height [32]
// @param {value} $btn-small-weight [$btn-weight]
// @param {rem} $btn-small-radius [4]

%btn-small {
  @include btn-core;
  @include macro-metrics(
    $btn-small-font-size,
    $btn-small-line-height,
    $btn-small-min-height,
    $padding-ratio: $btn-padding-ratio,
    $icon-size: $btn-small-icon-size
  );
  border-radius: arrayMagic($btn-small-radius);
  font-weight: $btn-small-weight;

}

// @param {number} $btn-big-font-size [$btn-font-size * 1.125]
// @param {number} $btn-big-line-height [$btn-big-font-size * $base-line-height]
// @param {number} $btn-big-icon-size [$btn-icon-size]
// @param {number} $btn-big-min-height [48]
// @param {value} $btn-big-weight [$btn-weight]
// @param {rem} $btn-big-radius [4]

%btn-big {
  @include btn-core;
  @include macro-metrics(
    $btn-big-font-size,
    $btn-big-line-height,
    $btn-big-min-height,
    $padding-ratio: $btn-padding-ratio,
    $icon-size: $btn-big-icon-size
  );
  border-radius: arrayMagic($btn-big-radius);
  font-weight: $btn-big-weight;

}

// @param {value} $btn-transition [background-color .2s, box-shadow .1s]
// @param {color} $btn-bg [$link] - set `background` value
// @param {color} $btn-color [setContrast($link)]
.btn {
  @extend %btn !optional;
  @extend %btn-style !optional;
  background: $btn-bg;
  color: $btn-color;
  transition: $btn-transition;


  * {
    cursor: pointer;
  }

  strong {
    vertical-align: baseline;
  }

  //
  // states
  // ------------------------------------------------------

  // @param {color} $btn-hover-bg [setHover($link)] - set `background` value
  // @param {color} $btn-hover-color [$btn-color]
  &.is-active,
  &:hover,
  &:focus {
    background: $btn-hover-bg;
    color: $btn-hover-color;
    outline: none;
  }

  // disabled state style for buttons
  &.is-disabled,
  &[disabled] {
    box-shadow: none;
    cursor: not-allowed;
    opacity: .6;
  }

  // little transform animation onclick
  &:active {
    transform: translateY(2px);
  }

  //
  // sizes
  // ------------------------------------------------------

  // small buttons
  &.btn_small {
    @extend %btn-small;
    @extend %btn-small-style !optional;
  }

  // big buttons
  &.btn_big {
    @extend %btn-big;
    @extend %btn-big-style !optional;
  }

  // @param {rem} $btn-wide -  min width for .btn_wide button
  // @param {rem} $btn-small-wide - min width for .btn_wide.btn_small button
  // @param {rem} $btn-big-wide - min width for .btn_wide.btn_big button

  &.btn_wide {
    min-width: rem($btn-wide);

    &.btn_small {
      min-width: rem($btn-small-wide);
    }

    &.btn_big {
      min-width: rem($btn-big-wide);
    }
  }

  // full-width buttons
  &.btn_block {
    display: block;
    width: 100%;

    @supports (display: flex) {
      display: flex;
    }
  }
}

//
// Styles
// ------------------------------------------------------

// @param {color} $btn-minor-bg [$minor]
// @param {color} $btn-minor-color [setContrast($minor)]
// @param {color} $btn-minor-hover-bg [setHover($minor)] - set `background` value
// @param {color} $btn-minor-hover-color [$btn-minor-color]
.btn_minor {
  @extend %btn-minor-style !optional;
  background: $btn-minor-bg;
  color: $btn-minor-color;

  &.is-active,
  &:hover,
  &:focus {
    background: $btn-minor-hover-bg;
    color: $btn-minor-hover-color;
  }
}

// @param {color} $btn-super-bg [$super]
// @param {color} $btn-super-color [setContrast($super)]
// @param {color} $btn-super-hover-bg [setHover($super)] - set `background` value
// @param {color} $btn-super-hover-color [$btn-super-color]
.btn_super {
  @extend %btn-super-style !optional;
  background: $btn-super-bg;
  color: $btn-super-color;

  &.is-active,
  &:hover,
  &:focus {
    background: $btn-super-hover-bg;
    color: $btn-super-hover-color;
  }
}

// @param {color} $btn-invert-bg [$background]
// @param {color} $btn-invert-color [$link]
// @param {color} $btn-invert-hover-bg [setHover($background)] - set `background` value
// @param {color} $btn-invert-hover-color [setHover($link)]
.btn_invert {
  @extend %btn-invert-style !optional;
  background: $btn-invert-bg;
  color: $btn-invert-color;

  &.is-active,
  &:hover,
  &:focus {
    background: $btn-invert-hover-bg;
    color: $btn-invert-hover-color;
  }
}

// @param {color} $btn-clear-bg [transparent]
// @param {color} $btn-clear-color [$link]
// @param {color} $btn-clear-hover-bg [transparent] - set `background` value
// @param {color} $btn-clear-hover-color [setHover($link)]
.btn_clear {
  @extend %btn-clear-style !optional;
  background: $btn-clear-bg;
  color: $btn-clear-color;

  &.is-active,
  &:hover,
  &:focus {
    background: $btn-clear-hover-bg;
    color: $btn-clear-hover-color;
  }
}

// for fluffy round buttons
// @param {boolean} $btn-round

@if $btn-round == true {
  .btn {
    border-radius: arrayMagic($btn-min-height / 2);

    &.btn_small {
      border-radius: arrayMagic($btn-small-min-height / 2);
    }

    &.btn_big {
      border-radius: arrayMagic($btn-big-min-height / 2);
    }
  }
}
