/// @author Bernhard Ruoff
/// @since 7.0.0
/// @access public
/// @group theme modifier
///
/// @param {array} $name-array - postfix names appending `.theme-`
/// @param {array} $color-array - theme colors
/// @param {array} $postfix-array - shade postfix names
/// @param {array} $shade-array - shading values
///
/// @return modifier class with background-color and color values

$name-array: default, minor, link, super, highlight, invert;
$color-array: $background, $minor, $link, $super, $highlight, $text;
$postfix-array: darkest, darker, dark, light, lighter, lightest;
$shade-array: -30, -20, -10, 10, 20, 30;

@for $i from 1 through length($color-array) {
  $color: nth($color-array, $i);
  $name: nth($name-array, $i);

  @if alpha($color) {
    $color: flattenColor($color);
  }

  @if $name == 'default' {
    .theme {
      background-color: $color;
      color: setContrast($color);

      a:not(.#{$pfx}btn) {
        color: setContrast($color, $link);
      }

      @for $n from 1 through length($postfix-array) {
        $postfix: nth($postfix-array, $n);
        $shade: nth($shade-array, $n);

        &_#{$postfix} {
          background-color: varColor($color, $shade);
          color: setContrast(varColor($color, $shade));

          a:not(.#{$pfx}btn) {
            color: setContrast(varColor($color, $shade), $link);
          }
        }
      }
    }
  } @else {
    .theme-#{$name} {
      background-color: $color;
      color: setContrast($color);

      a:not(.#{$pfx}btn) {
        color: setContrast($color, $link);
      }

      @for $n from 1 through length($postfix-array) {
        $postfix: nth($postfix-array, $n);
        $shade: nth($shade-array, $n);

        &_#{$postfix} {
          background-color: varColor($color, $shade);
          color: setContrast(varColor($color, $shade));

          a:not(.#{$pfx}btn) {
            color: setContrast(varColor($color, $shade), $link);
          }
        }
      }
    }
  }
}
