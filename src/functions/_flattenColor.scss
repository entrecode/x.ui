/// @author Bernhard Ruoff
/// @since 9.0.4
/// @access public
/// @group color-functions
///
/// Mixes a color with another color, considering its opacity
/// @example
/// color: flattenColor(rgba(black, .2);
///
/// @param {color} $fg - forground-color to be flattened
/// @param {color} $bg [$background] - background-color
///
/// @return {rgba}

@function flattenColor($fg, $bg: $background) {
  $a1: alpha($bg);
  $a2: alpha($fg);

  @if ($a1 == 0) {
    @if ($a2 == 0) {
      @return $fg;
    }
  }

  $a: $a2 + (1 - $a2) * $a1;
  $r: ($a2 * red($fg) + (1 - $a2) * $a1 * red($bg)) / $a;
  $g: ($a2 * green($fg) + (1 - $a2) * $a1 * green($bg)) / $a;
  $b: ($a2 * blue($fg) + (1 - $a2) * $a1 * blue($bg)) / $a;

  @return rgba($r, $g, $b, $a);
}