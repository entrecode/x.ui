/// @author Bernhard Ruoff
/// @since 9.0.4
/// @access public
/// @group color-functions
///
/// generate darker or lighter variation
/// @link https://medium.com/@erikdkennedy/color-in-ui-design-a-practical-framework-e18cacd97f9e#.78i84mre8
/// @example
///  color: varColor(#ff0000, 20); // returns color: #fe6e67;
///
/// @param {color} $source - source color
/// @param {number} $amount - positive or negative number for color transformation
///
/// @return {color} color variation

@function varColor($source, $amount) {
  // @param {string} $_h: hue value of source color
  // @param {string} $_l - lightness value of source color
  // @param {string} $_s - saturation value of source color
  // @param {number} $_h-ratio - ratio for increasing or decreasing hue based on $amount
  // @param {number} $_s-ratio -  ratio for increasing or decreasing saturation based on $amount
  // @param {string} $_target - target color value
  // @param {string} $_a - alpha color value
  $_h: stripUnit(hue($source));
  $_l: stripUnit(lightness($source));
  $_s: stripUnit(saturation($source));
  $_a: stripUnit(alpha($source));
  $_h-ratio: 0.15;
  $_s-ratio: 0.66;
  $_target: null;

  @if ($_a < 0.2 and $amount < 20 and $amount > -20) {
    $_target: rgba($source, $_a);
  } @else {
    @if ($amount > 0) {
      // if $amount is positive
      // color transformation to lighter and less saturated.
      // also the hue is transformed depending on its value
      //
      // @param {string} $_h-transform -  value for hue adjustment
      // @param {string} $_s-transform - value for desaturation
      $_h-transform: $amount * $_h-ratio;
      $_s-transform: $amount * $_s-ratio;

      @if ($_l == 100 and $_s == 0 or $_l == 100 and $_s == 0) {
      } @else {
        // if next to red hue is transformed towards red (0)
        @if ($_h < 60 and $_h >= 0) {
          $source: adjust-hue($source, $_h-transform);
        }

        // if next to green hue is transformed towards green (120)
        @if ($_h < 120 and $_h >= 60) {
          $source: adjust-hue($source, $_h-transform * -1);
        }

        // if next to green hue is transformed towards green (120)
        @if ($_h < 180 and $_h >= 120) {
          $source: adjust-hue($source, $_h-transform);
        }

        // if next to blue hue is transformed towards blue (240)
        @if ($_h < 240 and $_h >= 180) {
          $source: adjust-hue($source, $_h-transform * -1);
        }

        // if next to blue hue is transformed towards blue (240)
        @if ($_h < 300 and $_h >= 240) {
          $source: adjust-hue($source, $_h-transform);
        }

        // if next to red hue is transformed towards red (360)
        @if ($_h <= 360 and $_h >= 300) {
          $source: adjust-hue($source, $_h-transform * -1);
        }
      }

      $_target: lighten(desaturate($source, $_s-transform), $amount);
    } @else {
      // if $amount is negative
      // color transformation to darker and more saturated.
      // also the hue is transformed depending on its value
      // make value of $amount positive for transformation
      //
      // @param {string} $_h-transform - value for hue adjustment
      // @param {string} $_s-transform - value for desaturation
      $amount: $amount * -1;
      $_h-transform: $amount * $_h-ratio;
      $_s-transform: $amount * $_s-ratio;

      @if ($_l == 100 and $_s == 0 or $_l == 100 and $_s == 0) {
      } @else {
        // if next to red hue is transformed towards red (0)
        @if ($_h < 60 and $_h >= 0) {
          $source: adjust-hue($source, $_h-transform * -1);
        }

        // if next to green hue is transformed towards green (120)
        @if ($_h < 120 and $_h >= 60) {
          $source: adjust-hue($source, $_h-transform);
        }

        // if next to green hue is transformed towards green (120)
        @if ($_h < 180 and $_h >= 120) {
          $source: adjust-hue($source, $_h-transform * -1);
        }

        // if next to blue hue is transformed towards blue (120)
        @if ($_h < 240 and $_h >= 180) {
          $source: adjust-hue($source, $_h-transform);
        }

        // if next to blue hue is transformed towards blue (120)
        @if ($_h < 300 and $_h >= 240) {
          $source: adjust-hue($source, $_h-transform * -1);
        }

        // if next to red hue is transformed towards red (360)
        @if ($_h <= 360 and $_h >= 300) {
          $source: adjust-hue($source, $_h-transform);
        }
      }

      $_target: darken(saturate($source, $_s-transform), $amount);
    }
  }

  @return $_target;
}
