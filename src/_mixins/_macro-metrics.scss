/// @author Bernhard Ruoff
/// @since 8.0.0-beta.11
/// @access public
/// @group macro mixins
///
/// mixin for precise macro element sizing
/// @param {number} $font-size - font-size of element
/// @param {number} $line-height - line-height of element
/// @param {number} $min-height - min-height of element
/// @param {number} $border [null] - size of element border
/// @param {number} $padding-ratio [2] - ratio by which padding-left and padding-right are bigger

@mixin macro-metrics(
  $font-size,
  $line-height,
  $min-height,
  $border: null,
  $padding-ratio: 2
) {
  $padding: ($min-height - $line-height) / 2;

  @if $border {
    $padding: ($padding - $border);
  }

  font-size: em($font-size);
  line-height: em($line-height, $font-size);
  min-height: em($min-height, $font-size);
  min-width: em($min-height, $font-size);
  padding: em($padding, $font-size) em(($padding * $padding-ratio), $font-size);

  @if $border {
    border-width: rem($border);
    border-style: solid;
  }

  @content;

  .bubble,
  .tag {
    &:first-child {
      margin-left: rem($padding * -1);
      margin-right: rem($padding);
    }

    &:last-child {
      margin-right: rem($padding * -1);
      margin-left: rem($padding);
    }

    &:only-child {
      margin-left: rem($padding * -$padding-ratio);
      margin-right: rem($padding * -$padding-ratio);
    }
  }

  .ec-icon {
    padding-right: rem($padding);

    &::before {
      font-size: em($line-height, $font-size);
    }

    &_right {
      padding-right: 0;
      padding-left: rem($padding);
    }

    &:empty {
      padding-right: 0;
      padding-left: 0;
      margin-left: rem($padding * -$padding-ratio);
      margin-right: rem($padding * -$padding-ratio);

      &::before {
        margin-left: 0;
        margin-right: 0;
      }
    }
  }
}
