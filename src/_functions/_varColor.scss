/// @author Bernhard Ruoff
/// @since 7.0.0
/// @access public
/// @group color-functions
///
/// generate darker or lighter variation
/// @link https://medium.com/@erikdkennedy/color-in-ui-design-a-practical-framework-e18cacd97f9e#.78i84mre8
/// @example
///  color: varColor(#ff0000, 20); // returns color: #fe6e67;
///
/// @param {color} $source - source color
/// @param {number} $amount - positive or negative number for color transformation
///
/// @return {color} color variation

@function varColor($source, $amount) {
  /// @param {value} $hue: hue value of source color
  $hue: stripUnit(hue($source));
  /// @param {value} $lightness: lightness value of source color
  $lightness: stripUnit(lightness($source));
  /// @param {value} $sat: saturation value of source color
  $sat: stripUnit(saturation($source));
  /// @param {number} $hueRatio: ratio for increasing or decreasing hue based on $amount
  $hueRatio: .15;
  /// @param {number} $satRatio: ratio for increasing or decreasing saturation based on $amount
  $satRatio: .66;
  /// @param {value} $target: target color value
  $target: null;
  /// @param {value} $alpha: alpha color value
  $alpha: stripUnit(alpha($source));

  @if ($alpha < .2 and $amount < 20 and $amount > -20) {
    $target: rgba($source, $alpha);
  } @else {
    @if ($amount > 0) {
      /// if $amount is positive
      /// color transformation to lighter and less saturated.
      /// also the hue is transformed depending on its value

      /// @param {value} $satTransform: value for desaturation
      $satTransform: $amount * $satRatio;
      /// @param {value} $hueTransform: value for hue adjustment
      $hueTransform: $amount * $hueRatio;

      @if ($lightness == 100 and $sat == 0 or $lightness == 100 and $sat == 0) {

      } @else {
        /// if next to red hue is transformed towards red (0)
        @if ($hue < 60 and $hue >= 0) {
          $source: adjust-hue($source, $hueTransform);
        }

        /// if next to green hue is transformed towards green (120)
        @if ($hue < 120 and $hue >= 60) {
          $source: adjust-hue($source, $hueTransform *-1);
        }

        /// if next to green hue is transformed towards green (120)
        @if ($hue < 180 and $hue >= 120) {
          $source: adjust-hue($source, $hueTransform);
        }

        /// if next to blue hue is transformed towards blue (240)
        @if ($hue < 240 and $hue >= 180) {
          $source: adjust-hue($source, $hueTransform *-1);
        }

        /// if next to blue hue is transformed towards blue (240)
        @if ($hue < 300 and $hue >= 240) {
          $source: adjust-hue($source, $hueTransform);
        }

        /// if next to red hue is transformed towards red (360)
        @if ($hue <= 360 and $hue >= 300) {
          $source: adjust-hue($source, $hueTransform *-1);
        }
      }

      $target: lighten(desaturate($source, $satTransform), $amount);
    } @else {

      /// if $amount is negative
      /// color transformation to darker and more saturated.
      /// also the hue is transformed depending on its value

      /// make value of $amount positive for transformation
      $amount: $amount * -1;
      /// @param {value} $satTransform: value for desaturation
      $satTransform: $amount * $satRatio;
      /// @param {value} $hueTransform: value for hue adjustment
      $hueTransform: $amount * $hueRatio;

      @if ($lightness == 100 and $sat == 0 or $lightness == 100 and $sat == 0) {

      } @else {
        /// if next to red hue is transformed towards red (0)
        @if ($hue < 60 and $hue >= 0) {
          $source: adjust-hue($source, $hueTransform *-1);
        }

        /// if next to green hue is transformed towards green (120)
        @if ($hue < 120 and $hue >= 60) {
          $source: adjust-hue($source, $hueTransform);
        }

        /// if next to green hue is transformed towards green (120)
        @if ($hue < 180 and $hue >= 120) {
          $source: adjust-hue($source, $hueTransform *-1);
        }

        /// if next to blue hue is transformed towards blue (120)
        @if ($hue < 240 and $hue >= 180) {
          $source: adjust-hue($source, $hueTransform);
        }

        /// if next to blue hue is transformed towards blue (120)
        @if ($hue < 300 and $hue >= 240) {
          $source: adjust-hue($source, $hueTransform *-1);
        }

        /// if next to red hue is transformed towards red (360)
        @if ($hue <= 360 and $hue >= 300) {
          $source: adjust-hue($source, $hueTransform);
        }
      }

      $target: darken(saturate($source, $satTransform), $amount);
    }
  }

  @return $target;
}
