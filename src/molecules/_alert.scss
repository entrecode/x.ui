/// @author Bernhard Ruoff
/// @since 8.0.0-beta.8
/// @access public
/// @group molecules
///
/// @param {color} $alert-background [$background-lightest]
/// @param {value} $alert-weight [$is-normal]
/// @param {number} $alert-radius [4]
///
/// @param {em} $alert-small-font-size [$base-font-size * .875]
/// @param {rem} $alert-small-padding [8 12]
/// @param {rem} $alert-small-margin [0 0 16 0]
///
/// @param {em} $alert-font-size [$base-font-size]
/// @param {rem} $alert-padding [16 24]
/// @param {rem} $alert-margin [0 0 16 0]
///
/// @param {em} $alert-big-font-size [$base-font-size * 1.125]
/// @param {rem} $alert-big-padding [24 28]
/// @param {rem} $alert-big-margin [0 0 16 0]
///
/// @example
///   <p class='alert alert_error'>Error Message</p>

%alert {
  text-align: center;
  font-weight: $alert-weight;
  border-radius: rem($alert-radius);

  @if $alert-background {
    @include set-theme-colors($alert-background);
  } @else {
    @include set-theme-colors(getColor(background, lightest));
  }
}

.alert {
  @extend %alert;
  font-size: em($alert-font-size);
  padding: arrayMagic($alert-padding);
  margin: arrayMagic($alert-margin);

  /// additional styles via config
  @extend %alert-style !optional;
}

.alert-small {
  @extend %alert;
  font-size: em($alert-small-font-size);
  padding: arrayMagic($alert-small-padding);
  margin: arrayMagic($alert-small-margin);

  /// additional styles via config
  @extend %alert-small-style !optional;
}

.alert-big {
  @extend %alert;
  font-size: em($alert-big-font-size);
  padding: arrayMagic($alert-big-padding);
  margin: arrayMagic($alert-big-margin);

  /// additional styles via config
  @extend %alert-big-style !optional;
}

/// @param {value} $prefix ['alert_']
/// @param {array} $name-array - postfix names appending $prefix
/// @param {array} $color-array - theme colors

$prefix: 'alert_';
$name-array: minor, link, super, highlight, invert, info, error, success, warning;
$color-array: getColor(minor), getColor(link), getColor(super), getColor(highlight), getColor(text, invert), getColor(state, info), getColor(state, error), getColor(state, success), getColor(state, warning);

@for $i from 1 through length($color-array) {
  $color: nth($color-array, $i);
  $name: nth($name-array, $i);

  .#{$prefix}#{$name} {
    @include set-theme-colors($color);
  }
}
