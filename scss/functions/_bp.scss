/// @author Bernhard Ruoff
/// @since 10.0.0
/// @access public
/// @group grid-functions
///
/// @param {string} $breakpoint - short code of the breakpoint
/// @param {map} $map [$breakpoints] - name of breakpoint map
///
/// @return {string} value of next breakpoint-key or null

@function next-bp($breakpoint, $map: $breakpoints) {
  $_keys: map-keys($map);
  $_current: index($_keys, $breakpoint);

  @return if($_current < length($map), map-get($map, nth($_keys, $_current + 1)) * 1px, null);
}

/// get the breakpoints for responsiveness from a map
/// @example
/// bp(sm) // returns (min-width: 480px)
///
/// @param {string} $breakpoint - short code of the breakpoint
/// @param {string} $max null - can be set to max
/// @require {map} $breakpoints
///
/// @return {number} value of breakpoint-key, if $max == true it returns the value - 1 of the next value

@function bp($breakpoint, $max: null, $map: $breakpoints) {
  @if map-has-key($map, $breakpoint) {
    @if $max == max {
      $_breakpoint-max: next-bp($breakpoint);
      @return if($_breakpoint-max, $_breakpoint-max - 1 * 1px, null);
    } @else {
      @return map-get($map, $breakpoint) * 1px;
    }
  } @else {
    @warn '#{$breakpoint} is not a key';
    @return null;
  }
}
