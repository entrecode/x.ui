/// @author Bernhard Ruoff
/// @since 10.0.0
/// @access public
/// @group atoms
///
/// @param {number} $bubble-padding-ratio [1]

// @param {color} $bubble-background [$minor]
// @param {px} $bubble-font-size [14]
// @param {px} $bubble-line-height [16]
// @param {px} $bubble-min-height [28]
// @param {string} $bubble-weight [$is-bold]
// @param {array} $bubble-style
// @param {px} $bubble-radius [4]
.bubble {
  display: inline-block;
  @supports (display: inline-flex) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  text-align: center;
  white-space: nowrap;
  @include inject-style($bubble-style);
  @include set-theme-colors($bubble-background);
  @include atom-metrics(
    $bubble-font-size,
    $bubble-line-height,
    $bubble-min-height,
    $padding-ratio: $bubble-padding-ratio
  );
  border-radius: arrayMagic($bubble-radius);
  font-weight: $bubble-weight;

  // @param {px} $bubble-small-font-size [10]
  // @param {px} $bubble-small-line-height [12]
  // @param {px} $bubble-small-min-height [24]
  // @param {px} $bubble-small-radius [$bubble-radius]
  // @param {array} $bubble-small-style
  &.bubble_small {
    @include inject-style($bubble-small-style);
    @include atom-metrics(
      $bubble-small-font-size,
      $bubble-small-line-height,
      $bubble-small-min-height,
      $padding-ratio: $bubble-padding-ratio
    );
    border-radius: arrayMagic($bubble-small-radius);
  }

  // @param {px} $bubble-big-font-size [16]
  // @param {px} $bubble-big-line-height [20]
  // @param {px} $bubble-big-min-height [32]
  // @param {px} $bubble-big-radius [$bubble-radius]
  // @param {array} $bubble-big-style
  &.bubble_big {
    @include inject-style($bubble-big-style);
    @include atom-metrics(
      $bubble-big-font-size,
      $bubble-big-line-height,
      $bubble-big-min-height,
      $padding-ratio: $bubble-padding-ratio
    );
    border-radius: arrayMagic($bubble-big-radius);
  }
}

//
// Styles
// ------------------------------------------------------
// @param {string} $_prefix ['bubble_']
// @param {array} $theme-array - for theme-color loop used in e.g. `.tag` or `.btn`
$_prefix: 'bubble_';
@each $_n, $_c in $theme-array {
  .#{$_prefix}#{$_n} {
    @include set-theme-colors($_c);
  }
}

// @param {boolean} $bubble-round [false]
@if $bubble-round == true {
  .bubble {
    border-radius: arrayMagic($bubble-min-height / 2);

    &.bubble_small {
      border-radius: arrayMagic($bubble-small-min-height / 2);
    }

    &.bubble_big {
      border-radius: arrayMagic($bubble-big-min-height / 2);
    }
  }
}
