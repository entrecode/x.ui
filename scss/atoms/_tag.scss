/// @author Bernhard Ruoff
/// @since 10.0.0
/// @access public
/// @group atoms
///
/// @param {variable} $tag-font-family [$body-font]
/// @param {number} $tag-padding-ratio [1] - ratio by which padding-left and padding-right are bigger
/// @param {string} $tag-weight [$is-bold]
/// @param {color} $tag-background [$minor]

// @param {px} $tag-font-size [14]
// @param {px} $tag-line-height [14]
// @param {px} $tag-min-height [20]
// @param {array} $tag-style
.tag {
  display: inline-block;

  @supports (display: inline-flex) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  text-align: center;
  white-space: nowrap;
  vertical-align: text-bottom;
  @include inject-style($tag-style);
  @include atom-metrics($tag-font-size, $tag-line-height, $tag-min-height, $padding-ratio: $tag-padding-ratio);
  @include set-theme-colors($tag-background);
  border-radius: arrayMagic($tag-radius);
  font-family: $tag-font-family;
  font-weight: $tag-weight;

  a {
    color: setContrast($tag-background);
  }

  // @param {px} $tag-small-font-size [12]
  // @param {px} $tag-small-line-height [12]
  // @param {px} $tag-small-min-height [16]
  // @param {array} $tag-small-style
  &_small {
    @include inject-style($tag-small-style);
    @include atom-metrics(
      $tag-small-font-size,
      $tag-small-line-height,
      $tag-small-min-height,
      $padding-ratio: $tag-padding-ratio
    );
    border-radius: arrayMagic($tag-small-radius);
  }

  // @param {px} $tag-big-font-size [14]
  // @param {px} $tag-big-line-height [14]
  // @param {px} $tag-big-min-height [28]
  // @param {array} $tag-big-style
  &_big {
    @include inject-style($tag-big-style);
    @include atom-metrics(
      $tag-big-font-size,
      $tag-big-line-height,
      $tag-big-min-height,
      $padding-ratio: $tag-padding-ratio
    );
    border-radius: arrayMagic($tag-big-radius);
  }
}

//
// Styles
// ------------------------------------------------------
// @param {string} $_prefix ['tag_']
// @param {array} $theme-array - for theme-color loop used in e.g. `.tag` or `.btn`
$_prefix: 'tag_';
@each $_n, $_c in $theme-array {
  .#{$_prefix}#{$_n} {
    @include set-theme-colors($_c);

    a {
      color: setContrast($_c);
    }

    @at-root a.#{$_prefix}#{$_n} {
      &:hover {
        background: setHover($_c);
        color: setContrast($_c);
      }
    }
  }
}

// @param {boolean} $tag-round [false] - sets border-radius to 50% of tag height
// @param {px} $tag-radius [2]
// @param {px} $tag-small-radius [$tag-radius]
// @param {px} $tag-big-radius [$tag-radius]
@if $tag-round == true {
  .tag {
    border-radius: arrayMagic($tag-min-height / 2);

    &.tag_small {
      border-radius: arrayMagic($tag-small-min-height / 2);
    }

    &.tag_big {
      border-radius: arrayMagic($tag-big-min-height / 2);
    }
  }
}
