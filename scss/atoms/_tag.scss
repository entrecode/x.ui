/// @author Bernhard Ruoff
/// @since 10.0.0
/// @access public
/// @group atoms
///
/// @param {variable} $tag-font-family [$body-font-family]
/// @param {number} $tag-padding-ratio [1] - ratio by which padding-left and padding-right are bigger
/// @param {string} $tag-weight [$is-bold]
/// @param {color} $tag-background [$minor]

// @param {px} $tag-font-size [14]
// @param {px} $tag-line-height [14]
// @param {px} $tag-min-height [20]
// @param {array} $tag-style
.tag {
  display: inline-block;

  @supports (display: inline-flex) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  text-align: center;
  white-space: nowrap;
  vertical-align: text-bottom;
  @include inject-style($tag-style);
  @include atom-metrics($tag-font-size, $tag-line-height, $tag-min-height, $padding-ratio: $tag-padding-ratio);
  @include set-theme-colors($tag-background);
  border-radius: arrayMagic($tag-radius);
  font-family: $tag-font-family;
  font-weight: $tag-weight;

  a {
    color: setContrast($tag-background);
  }

  // @param {px} $tag-small-font-size [12]
  // @param {px} $tag-small-line-height [12]
  // @param {px} $tag-small-min-height [16]
  // @param {array} $tag-small-style
  &_small {
    @include inject-style($tag-small-style);
    @include atom-metrics(
      $tag-small-font-size,
      $tag-small-line-height,
      $tag-small-min-height,
      $padding-ratio: $tag-padding-ratio
    );
    border-radius: arrayMagic($tag-small-radius);
  }

  // @param {px} $tag-big-font-size [14]
  // @param {px} $tag-big-line-height [14]
  // @param {px} $tag-big-min-height [28]
  // @param {array} $tag-big-style
  &_big {
    @include inject-style($tag-big-style);
    @include atom-metrics(
      $tag-big-font-size,
      $tag-big-line-height,
      $tag-big-min-height,
      $padding-ratio: $tag-padding-ratio
    );
    border-radius: arrayMagic($tag-big-radius);
  }
}

//
// Styles
// ------------------------------------------------------
// @requires {array} $tag-styles
// @param {string} $_prefix ['tag_']
$_prefix: 'tag_';

@each $_key, $_value in $tag-styles {
  @if length($_value) == 3 {
    $_background: nth($_value, 1);
    $_color: nth($_value, 2);
    $_hover: nth($_value, 3);

    .#{$_prefix}#{$_key} {
      background: $_background;
      color: $_color;

      a {
        color: $_color;
      }

      @at-root a.#{$_prefix}#{$_key} {
        &:hover {
          background: $_hover;
          color: $_color;
        }
      }
    }
  } @else {
    @warn 'arguments missing - #{$_key}: #{$_value}';
  }
}
