/// @author Bernhard Ruoff
/// @since 10.0.0
/// @access public
/// @group atoms
///
/// @param {number} $input-font-size [16]
/// @param {number} $input-line-height [24]
/// @param {number} $input-min-height [32]
/// @param {number} $input-padding-ratio [1]
/// @param {array} $input-spacing [0]
/// @param {color} $input-border-color [transparent]
/// @param {number} $input-border-width [0]
/// @param {string} $input-border-style [solid]
/// @param {color} $input-background
/// @param {color} $input-color
/// @param {number} $input-radius [4]
/// @param {array} $input-style

.input {
  display: block;
  flex-grow: 1;
  outline: none;
  text-align: left;
  width: 100%;
  font-family: inherit;
  @include inject-style($input-style);
  @include metrics($input-font-size, $input-line-height, $input-min-height, $input-border-width, $input-padding-ratio);
  background: $input-background;
  border-radius: array-magic($input-radius);
  border-width: $input-border-width;
  border-color: $input-border-color;
  border-style: $input-border-style;
  margin: array-magic($input-spacing);
  color: $input-color;

  // @param {color} $input-placeholder-color
  // @param {array} $input-placeholder-style
  @include placeholder {
    @include inject-style($input-placeholder-style);
    color: $input-placeholder-color;
  }

  //
  // states
  // ------------------------------------------------------
  // @param {color} $input-placeholder-hover-color [$text]
  // @param {array} $input-placeholder-hover-style
  // @param {array} $input-hover-style
  &:hover {
    @include inject-style($input-hover-style);
    @include placeholder {
      @include inject-style($input-placeholder-hover-style);
    }
  }

  // @param {array} $input-placeholder-focus-style
  // @param {array} $input-focus-style
  &:focus {
    outline: none;
    @include inject-style($input-focus-style);

    @include placeholder {
      @include inject-style($input-placeholder-focus-style);
    }
  }

  // @param {array} $input-disabled-style
  &.is-disabled,
  &[disabled] {
    cursor: not-allowed;
    @include inject-style($input-disabled-style);
  }

  @at-root select#{&} {
    height: rem($input-min-height);

    &[multiple] {
      height: auto;
    }
  }

  @at-root textarea#{&} {
    height: auto;
    resize: vertical;
  }

  &_clear {
    border-color: transparent;
    background: none;
  }

  /// reset for webkit-autofill background
  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus,
  &:-webkit-autofill:active {
    transition: background-color 5000s ease-in-out 0s;
    color: $input-color;
    -webkit-text-fill-color: $input-color;
  }
}

//
// size modifier
// ------------------------------------------------------

// @param {number} $input-small-font-size [14]
// @param {number} $input-small-line-height [18]
// @param {number} $input-small-min-height [28]
// @param {array} $input-small-style]
.input_small {
  @include inject-style($input-small-style);
  font-size: rem($input-small-font-size);
  line-height: rem($input-small-line-height);
  height: rem($input-small-min-height);

  @at-root select#{&} {
    height: rem($input-small-min-height);

    &[multiple] {
      height: auto;
    }
  }
}

// @param {number} $input-big-font-size [18]
// @param {number} $input-big-line-height [24]
// @param {number} $input-big-min-height [40]
// @param {array} $input-big-radius [$input-radius]
// @param {array} $input-big-style
.input_big {
  @include inject-style($input-big-style);
  font-size: rem($input-big-font-size);
  line-height: rem($input-big-line-height);
  height: rem($input-big-min-height);

  @at-root select#{&} {
    height: rem($input-big-min-height);

    &[multiple] {
      height: auto;
    }
  }
}

/// Keep the original size
[type='checkbox'],
[type='file'],
[type='image'],
[type='radio'] {
  display: inline-block;
  height: auto;
  width: auto;
}

/// Checkbox & radio
[type='checkbox'],
[type='radio'] {
  line-height: normal;
  padding: 0;
  vertical-align: middle;

  + small {
    cursor: pointer;
    display: inline-block;
  }
}
