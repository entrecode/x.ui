<h3>data-grid</h3>
<p class="is-lead">The flex-based grid is a more modern and more flexible approach for a
  grid-model which is not prone to floating errors. all values can be combined e.g. <span class="code">data-grid="is-small
    is-default-md"</span> it also can be combined with additional
  data-flex values to influence it's behavior.</p>
<div class="well">
  <div data-grid="is-small is-center">
    <div data-col='4'>
      <div class="form-group">
        <label for="dataGridValue">value</label>
        <select v-model="dataGridValue" id="dataGridValue" class="input">
          <option :value="v" v-for="v in dataGridOptions">${v === '' ? 'default' : v}</option>
        </select>
      </div>
    </div>
    <div data-col='4'>
      <div class="form-group">
        <label for="dataGridBreakpoint">breakpoints</label>
        <select v-model="dataGridBreakpoint" id="dataGridBreakpoint" class="input" v-cloak>
          <option :value="key" v-for="(value, key) in breakpoints">${value} (${key})</option>
        </select>
      </div>
    </div>
  </div>
  <p class="align-center">
    <span class="code" v-if="dataGridValue === 'is-default'" v-cloak>
      data-grid<span v-if="dataGridBreakpoint !== 'xs'">="is-default-${dataGridBreakpoint}"</span>
    </span>
    <span class="code" v-if="dataGridValue !== 'is-default'" v-cloak>
      data-grid="${dataGridValue}<span v-if="dataGridBreakpoint !== 'xs'">-${dataGridBreakpoint}</span>"
    </span>
  </p>
  <p v-if="dataGridValue === 'is-default'" v-cloak class="align-center">
    <small><span class="tag tag_small">default</span> activates flex-grid with a default gutter (32px)</small>
  </p>
  <p v-if="dataGridValue === 'is-small'" v-cloak class="align-center">
    half sized gutter (16px) between columns.
  </p>
  <p v-if="dataGridValue === 'no-gutter'" v-cloak class="align-center">
    removes the gutter between the inline columns.
  </p>
  <p v-if="dataGridValue === 'is-start'" v-cloak class="align-center">
    <span class="tag tag_small">default</span> aligns columns left
  </p>
  <p v-if="dataGridValue === 'is-center'" v-cloak class="align-center">
    centers the columns
  </p>
  <p v-if="dataGridValue === 'is-end'" v-cloak class="align-center">
    aligns columns right
  </p>
</div>

<div :data-grid="dataGridValue + '-' + dataGridBreakpoint" class="demo-grid" v-cloak>
  <div data-col="4">
    <div class="has-padding is-theme-minor align-center">4</div>
  </div>
  <div data-col="4">
    <div class="has-padding is-theme-minor align-center">4</div>
  </div>
</div>

<div class="spacer"></div>

<div class="title">
  <h4 class="is-kilo">config variables</h4>
  <a href="https://github.com/entrecode/x.ui/blob/master/src/_xui-config.scss" target="_blank" class="btn btn_clear">
    <span class="ec-icon json"></span>
  </a>
</div>
<pre><code class="scss">
// @param {px} $grid-gutter [32] - gutter size in pixels without unit
// @param {value} $grid-outer-gutter [true] - sets an outer gutter of ($grid-gutter / 2)
// @param {number} $grid-num-columns [12] - number of columns in a row
$grid-gutter: 32 !default;
$grid-outer-gutter: true !default;
$grid-num-columns: 12 !default;</code></pre>

<div class="spacer spacer_big"></div>